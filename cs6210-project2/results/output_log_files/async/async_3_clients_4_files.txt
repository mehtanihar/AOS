Directory path: . 
Number of segments 500 
Size of segments 4 
Number of threads: 3 
Sync: 0 
Num files: 4 

Initialize shared memory
Creating server 
Server created! 
Total files to read 4 
Start reading files next 
 The size of file is 54 
 The size of file is 70 
 The size of file is 37 
 The size of file is 98 
Creating async thread id: 0 

In server
Created thread id: 0 
Creating async thread id: 1 
Created thread id: 1 
Creating async thread id: 2 
Created thread id: 2 
client initialised 2  is_sync 0 
Started asynchronised compress for Client id: 2 Client queue: 7209180 
Input size in buffer: 54 
Client id: 2 request producer locked 
Client id: 2 Client writing started: client 
Client id : 2 client written
Client id : 2 memory written
Client id : 2 Write complete
Input size is now 70 
Client id : 2 Lock free
Server can start processing requests
client initialised 0  is_sync 0 
Started asynchronised compress for Client id: 0 Client queue: 7209180 
Server read client ID!
Server read memory!
Server read input buffer!
Server will start compressing!
First file: sample.txt
dasdasdbb
sadasjh
dsadbajsbcj


Snappy done compression!
Writing word server
Writing client id, 2
Writing word memory, 2
Out size: 55 
Writing outbuffer,
 6dFirst file: sample.txt
das\bb
sadasjh
dsadbajsbcj


Message sent 

In server
Client id: 0 Message received from : 
Processed files: -1 client: 0 
Client id: 0 Start: server0002memory000000556dFirst file: sample.txt
das\bb
sadasjh
dsadbajsbcj

 
@Mem size: 55 
start right now: 6dFirst file: sample.txt
das\bb
sadasjh
dsadbajsbcj

 
Assigned output size
Client id: 0 Sent output buffers to app: 6dFirst file: sample.txt
das\bb
sadasjh
dsadbajsbcj

 
Input size in buffer: 70 
Client id: 2 request producer locked 
Client id: 2 Client writing started: client 
Client id : 2 client written
Client id : 2 memory written
Client id : 2 Write complete
Input size is now 37 
Client id : 2 Lock free
Server can start processing requests
Server read client ID!
Input size in buffer: 37 
Server read memory!
Client id: 0 request producer locked 
Client id: 0 Client writing started: client 
Server read input buffer!
Client id : 0 client written
Server will start compressing!
Client id : 0 memory written
Now let us try compressing sample1.txt.
It should not be a hard task.

Client id : 0 Write complete
Input size is now 98 
Snappy done compression!
Client id : 0 Lock free
Writing word server
Input size in buffer: 98 
Writing client id, 2
Client id: 2 request producer locked 
Client id: 2 Client writing started: client 
Writing word memory, 2
Client id : 2 client written
Out size: 73 
Client id : 2 memory written
Writing outbuffer,
 FENow let us try compressing sample1.txt.
It should not be a hard task.

Client id : 2 Write complete
Input size is now -1 
Client id : 2 Lock free
Message sent 

In server
Server can start processing requests
Server read client ID!
Client id: 0 Message received from : 
Server read memory!
Processed files: -1 client: 0 
Server read input buffer!
Client id: 0 Start: server0002memory00000073FENow let us try compressing sample1.txt.
It should not be a hard task.
 
@Mem size: 73 
start right now: FENow let us try compressing sample1.txt.
It should not be a hard task.
 
Assigned output size
Client id: 0 Sent output buffers to app: FENow let us try compressing sample1.txt.
It should not be a hard task.
 
Server will start compressing!
This is sample2.txt. Let us test it.

Snappy done compression!
Writing word server
Writing client id, 0
Writing word memory, 0
Out size: 39 
Writing outbuffer,
 %êThis is sample2.txt. Let us test it.

Message sent 

In server
Server can start processing requests
Server read client ID!
Server read memory!
Server read input buffer!
Server will start compressing!
skjbgkjzfbjksbefkaejbdyuavfjawdhvVDhazfdaDnavdkjznf
sfxbskjxgkznfaknjefkz
jkzfskegsngkzlnfzmfkzk


Client id: 2 Message received from : 
Snappy done compression!
Processed files: -1 client: 2 
Writing word server
Client id: 2 Start: server0000memory00000039%êThis is sample2.txt. Let us test it.
server 
@Mem size: 39 
start right now: %êThis is sample2.txt. Let us test it.
server 
Assigned output size
Client id: 2 Sent output buffers to app: %êThis is sample2.txt. Let us test it.
 
Writing client id, 2
Writing word memory, 2
Out size: 101 
Writing outbuffer,
 baskjbgkjzfbjksbefkaejbdyuavfjawdhvVDhazfdaDnavdkjznf
sfxbskjxgkznfaknjefkz
jkzfskegsngkzlnfzmfkzk


Message sent 

In server
Client id: 0 Message received from : 
Processed files: -1 client: 0 
Client id: 0 Start: server0002memory00000101baskjbgkjzfbjksbefkaejbdyuavfjawdhvVDhazfdaDnavdkjznf
sfxbskjxgkznfaknjefkz
jkzfskegsngkzlnfzmfkzk

 
@Mem size: 101 
start right now: baskjbgkjzfbjksbefkaejbdyuavfjawdhvVDhazfdaDnavdkjznf
sfxbskjxgkznfaknjefkz
jkzfskegsngkzlnfzmfkzk

 
Assigned output size
Client id: 0 Sent output buffers to app: baskjbgkjzfbjksbefkaejbdyuavfjawdhvVDhazfdaDnavdkjznf
sfxbskjxgkznfaknjefkz
jkzfskegsngkzlnfzmfkzk

 
Client id 2 exited 
Server exited 
Client id 0 exited 
sample.txt 
./sample.txt.compressed 
id: 0 
++6dFirst file: sample.txt
das\bb
sadasjh
dsadbajsbcj


closed file 
sample1.txt 
./sample1.txt.compressed 
id: 1 
++FENow let us try compressing sample1.txt.
It should not be a hard task.

closed file 
sample2.txt 
./sample2.txt.compressed 
id: 2 
++%êThis is sample2.txt. Let us test it.

closed file 
sample3.txt 
./sample3.txt.compressed 
id: 3 
++baskjbgkjzfbjksbefkaejbdyuavfjawdhvVDhazfdaDnavdkjznf
sfxbskjxgkznfaknjefkz
jkzfskegsngkzlnfzmfkzk


closed file 
yo===
App exit()
Detached and destroyed shared memory
